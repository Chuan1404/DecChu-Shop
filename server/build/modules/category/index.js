"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setUpCategoryModule = void 0;
const express_1 = require("express");
const dto_1 = require("./infras/repository/dto");
const repository_1 = require("./infras/repository");
const httpService_1 = require("./infras/transport/express/httpService");
const createCmdHandler_1 = require("./usecase/createCmdHandler");
const updateCmdHandler_1 = require("./usecase/updateCmdHandler");
const deleteCmdHandler_1 = require("./usecase/deleteCmdHandler");
const getQueryHandler_1 = require("./usecase/getQueryHandler");
const listQueryHandler_1 = require("./usecase/listQueryHandler");
const setUpCategoryModule = (sequelize) => {
    (0, dto_1.init)(sequelize);
    const repository = new repository_1.MySQLCategoryRepository(sequelize, dto_1.modelName);
    const createCommand = new createCmdHandler_1.CreateCmdHandler(repository);
    const updateCommand = new updateCmdHandler_1.UpdateCmdHandler(repository);
    const deleteCommand = new deleteCmdHandler_1.DeleteCmdHandler(repository);
    const getQuery = new getQueryHandler_1.GetQueryHandler(repository);
    const listQuery = new listQueryHandler_1.ListQueryHandler(repository);
    const httpService = new httpService_1.CategoryHttpService(listQuery, getQuery, createCommand, updateCommand, deleteCommand);
    const router = (0, express_1.Router)();
    router.get("/categories", httpService.list.bind(httpService));
    router.get("/categories/:id", httpService.get.bind(httpService));
    router.post("/categories", httpService.create.bind(httpService));
    router.patch("/categories/:id", httpService.update.bind(httpService));
    router.delete("/categories/:id", httpService.delete.bind(httpService));
    return router;
};
exports.setUpCategoryModule = setUpCategoryModule;
